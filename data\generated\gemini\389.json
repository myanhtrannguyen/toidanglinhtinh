{
    "solution_id": "gemini-389",
    "problem_id": "p03654",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAXN 100005\n#define INF 2e18\n\ntypedef struct {\n    int to;\n    long long cost;\n} Edge;\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n\n    Edge edges[2 * (MAXN - 1)];\n    int edgeCount = 0;\n    for (int i = 0; i < n - 1; i++) {\n        int u, v;\n        long long c;\n        scanf(\"%d %d %lld\", &u, &v, &c);\n        edges[edgeCount++] = (Edge){v, c};\n        edges[edgeCount++] = (Edge){u, c};\n    }\n\n    long long dist[MAXN][MAXN];\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            dist[i][j] = INF;\n        }\n    }\n    for (int i = 1; i <= n; i++) dist[i][i] = 0;\n\n    for (int i = 0; i < edgeCount; i++) {\n        dist[edges[i].to][edges[i].to] = 0;\n        dist[edges[i].to][edges[i].to] = 0;\n        dist[edges[i].to][edges[ (i+1)%edgeCount ].to] = edges[i].cost;\n        dist[edges[ (i+1)%edgeCount ].to][edges[i].to] = edges[i].cost;\n    }\n\n    for (int k = 1; k <= n; k++) {\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                if (dist[i][k] != INF && dist[k][j] != INF) {\n                    dist[i][j] = (dist[i][j] > dist[i][k] + dist[k][j]) ? dist[i][k] + dist[k][j] : dist[i][j];\n                }\n            }\n        }\n    }\n\n    long long maxPath = 0;\n    int p[n];\n    for (int i = 0; i < n; i++) p[i] = i + 1;\n\n    do {\n        long long currentPath = 0;\n        for (int i = 0; i < n - 1; i++) {\n            currentPath += dist[p[i]][p[i + 1]];\n        }\n        maxPath = (maxPath > currentPath) ? maxPath : currentPath;\n    } while (next_permutation(p, p + n));\n\n    printf(\"%lld\\n\", maxPath);\n\n    return 0;\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}