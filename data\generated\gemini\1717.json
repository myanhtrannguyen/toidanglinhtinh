{
    "solution_id": "gemini-1717",
    "problem_id": "p04009",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int H, W;\n    scanf(\"%d %d\", &H, &W);\n    char grid[H][W];\n    int exit_row, exit_col;\n    int robot_count = 0;\n    for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n            scanf(\" %c\", &grid[i][j]);\n            if (grid[i][j] == 'o') robot_count++;\n            if (grid[i][j] == 'E') {\n                exit_row = i;\n                exit_col = j;\n            }\n        }\n    }\n    int max_saved = 0;\n    for (int i = 0; i < (1 << (2 * robot_count)); i++) {\n        int saved = 0;\n        char current_grid[H][W];\n        for (int r = 0; r < H; r++) {\n            for (int c = 0; c < W; c++) {\n                current_grid[r][c] = grid[r][c];\n            }\n        }\n        int temp = i;\n        int robots_left = robot_count;\n        int moves[robot_count];\n        for (int j = 0; j < robot_count; j++) {\n            moves[j] = temp % 4;\n            temp /= 4;\n        }\n        int dr[] = {-1, 1, 0, 0};\n        int dc[] = {0, 0, -1, 1};\n        int k=0;\n        for(int r=0; r<H; ++r){\n            for(int c=0; c<W; ++c){\n                if(current_grid[r][c] == 'o'){\n                    int nr = r + dr[moves[k]];\n                    int nc = c + dc[moves[k]];\n                    if(nr >=0 && nr < H && nc >=0 && nc < W){\n                        if(current_grid[nr][nc] == 'E'){\n                            saved++;\n                            current_grid[r][c] = '.';\n                        } else {\n                            current_grid[r][c] = '.';\n                            current_grid[nr][nc] = 'o';\n                        }\n                    }\n                    k++;\n                }\n            }\n        }\n        max_saved = (saved > max_saved) ? saved : max_saved;\n    }\n    printf(\"%d\\n\", max_saved);\n    return 0;\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}