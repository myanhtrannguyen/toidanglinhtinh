{
    "solution_id": "gemini-1248",
    "problem_id": "p03882",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\nimport java.lang.*;\n\nclass Main {\n    static double dist(int[] a, int[] b) {\n        return Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[][] cities = new int[n][3];\n        for (int i = 0; i < n; i++) {\n            cities[i][0] = sc.nextInt();\n            cities[i][1] = sc.nextInt();\n            cities[i][2] = sc.nextInt();\n        }\n        double left = 0, right = 1e9;\n        while (right - left > 1e-10) {\n            double mid = (left + right) / 2;\n            double[] water = new double[n];\n            for (int i = 0; i < n; i++) water[i] = cities[i][2];\n            boolean possible = true;\n            for (int i = 0; i < (1 << n); i++) {\n                double[] curWater = Arrays.copyOf(water, n);\n                double total = 0;\n                List<Integer> group1 = new ArrayList<>();\n                List<Integer> group2 = new ArrayList<>();\n                for (int j = 0; j < n; j++) {\n                    if ((i >> j) % 2 == 1) group1.add(j);\n                    else group2.add(j);\n                }\n                double sum1 = 0, sum2 = 0;\n                for (int j : group1) sum1 += curWater[j];\n                for (int j : group2) sum2 += curWater[j];\n                if (group1.size() > 0 && group2.size() > 0) {\n                    double transfer = Math.min(sum1, sum2);\n                    for (int j : group1) {\n                        double minDist = 1e18;\n                        for (int k : group2) minDist = Math.min(minDist, dist(cities[j], cities[k]));\n                        transfer -= minDist;\n                        if (transfer < 0) transfer = 0;\n                    }\n                    \n                    sum1 = sum1 + transfer;\n                    sum2 = sum2 + transfer;\n\n                    \n                }\n                boolean ok = true;\n                if (group1.size() > 0) {\n                    double avg = sum1 / group1.size();\n                    if (avg < mid) ok = false;\n                }\n                if (group2.size() > 0) {\n                    double avg = sum2 / group2.size();\n                    if (avg < mid) ok = false;\n                }\n                if (ok) possible = true;\n                else possible = false;\n                if (!possible) break;\n            }\n            if (possible) left = mid;\n            else right = mid;\n        }\n        System.out.printf(\"%.12f\\n\", left);\n    }\n    static int[] cities(int i){\n        return new int[3];\n    }\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}