{
    "solution_id": "gemini-1416",
    "problem_id": "p03930",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n#define H 10\n#define W 10\n\nint board[H][W];\nint temp_board[H][W];\n\nint main() {\n    int h, w;\n    scanf(\"%d %d\", &h, &w);\n\n    for (int i = 0; i < h; i++) {\n        for (int j = 0; j < w; j++) {\n            scanf(\"%d\", &board[i][j]);\n        }\n    }\n\n    long long max_score = -1;\n    for (int r = 0; r < h; r++) {\n        for (int c = 0; c < w; c++) {\n            long long current_score = 0;\n            long long power_of_2 = 1;\n            int chain_count = 0;\n\n            //create a copy of board\n            for(int i=0; i<h; ++i){\n                for(int j=0; j<w; ++j){\n                    temp_board[i][j] = board[i][j];\n                }\n            }\n            temp_board[r][c] = 0;\n\n\n            while (1) {\n                int disappeared = 0;\n                int sum_disappeared = 0;\n                \n                //check horizontal\n                for (int i = 0; i < h; i++) {\n                    for (int j = 0; j < w; j++) {\n                        if (temp_board[i][j] != 0) {\n                            int count = 1;\n                            int k = j + 1;\n                            while (k < w && temp_board[i][k] == temp_board[i][j]) {\n                                count++;\n                                k++;\n                            }\n                            if (count >= 3) {\n                                for (int l = j; l < k; l++) {\n                                    sum_disappeared += temp_board[i][l];\n                                    temp_board[i][l] = 0;\n                                    disappeared = 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                if (disappeared) {\n                    current_score += power_of_2 * sum_disappeared;\n                    power_of_2 *= 2;\n                    chain_count++;\n\n                    //drop stones\n                    for (int j = 0; j < w; j++) {\n                        int empty_row = h - 1;\n                        for (int i = h - 1; i >= 0; i--) {\n                            if (temp_board[i][j] != 0) {\n                                temp_board[empty_row][j] = temp_board[i][j];\n                                if (empty_row != i) temp_board[i][j] = 0;\n                                empty_row--;\n                            }\n                        }\n                    }\n                } else {\n                    break;\n                }\n            }\n            if (current_score > max_score) {\n                max_score = current_score;\n            }\n        }\n    }\n    printf(\"%lld\\n\", max_score);\n    return 0;\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}