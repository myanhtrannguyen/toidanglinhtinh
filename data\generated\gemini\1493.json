{
    "solution_id": "gemini-1493",
    "problem_id": "p03949",
    "language": "Python",
    "solution": "```python\nimport collections\n\ndef solve():\n    n = int(input())\n    edges = []\n    for _ in range(n - 1):\n        u, v = map(int, input().split())\n        edges.append((u - 1, v - 1))\n    k = int(input())\n    assigned = {}\n    for _ in range(k):\n        v, p = map(int, input().split())\n        assigned[v - 1] = p\n\n    graph = collections.defaultdict(list)\n    for u, v in edges:\n        graph[u].append(v)\n        graph[v].append(u)\n\n    result = [-1] * n\n    for node, val in assigned.items():\n        result[node] = val\n\n    queue = collections.deque(assigned.keys())\n    visited = set(assigned.keys())\n\n    while queue:\n        curr = queue.popleft()\n        for neighbor in graph[curr]:\n            if neighbor not in visited:\n                result[neighbor] = result[curr] + 1 if result[curr] + 1 - result[neighbor] == 1 else result[curr] -1\n                visited.add(neighbor)\n                queue.append(neighbor)\n\n    valid = True\n    for u, v in edges:\n        if abs(result[u] - result[v]) != 1:\n            valid = False\n            break\n\n    if valid:\n        print(\"Yes\")\n        for val in result:\n            print(val)\n    else:\n        print(\"No\")\n\nsolve()\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}