{
    "solution_id": "gemini-1419",
    "problem_id": "p03930",
    "language": "Python",
    "solution": "```python\nH, W = map(int, input().split())\nboard = [list(map(int, list(input()))) for _ in range(H)]\n\ndef solve():\n    best_score = -1\n    best_r, best_c = -1, -1\n\n    for r in range(H):\n        for c in range(W):\n            temp_board = [row[:] for row in board]\n            temp_board[r][c] = 0\n            score = simulate(temp_board)\n            if score > best_score:\n                best_score = score\n                best_r, best_c = r, c\n\n    print(best_score)\n\ndef simulate(board):\n    score = 0\n    total_removed = 0\n    while True:\n        removed = []\n        for r in range(len(board)):\n            count = 1\n            for c in range(len(board[0]) - 1):\n                if board[r][c] == board[r][c+1] and board[r][c] != 0:\n                    count += 1\n                else:\n                    if count >= 3:\n                        removed.extend([(r, c-count+1+i) for i in range(count)])\n                    count = 1\n            if count >= 3:\n                removed.extend([(r, len(board[0])-count+i) for i in range(count)])\n\n        if not removed:\n            break\n\n        removed_sum = 0\n        for r, c in removed:\n            removed_sum += board[r][c]\n            board[r][c] = 0\n        \n        total_removed += removed_sum\n        score += total_removed * (2**len(removed))\n\n        #Drop down\n        for c in range(len(board[0])):\n            new_col = []\n            for r in range(len(board)):\n                if board[r][c] != 0:\n                    new_col.append(board[r][c])\n            new_col += [0] * (len(board)-len(new_col))\n            for r in range(len(board)):\n                board[r][c] = new_col[r]\n\n\n    return score\n\nsolve()\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}