{
    "solution_id": "gemini-257",
    "problem_id": "p03619",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <iomanip>\n\nusing namespace std;\n\nint main() {\n    long long x1, y1, x2, y2;\n    cin >> x1 >> y1 >> x2 >> y2;\n\n    int n;\n    cin >> n;\n\n    vector<pair<long long, long long>> fountains(n);\n    for (int i = 0; i < n; ++i) {\n        cin >> fountains[i].first >> fountains[i].second;\n    }\n\n    double min_dist = -1;\n\n    vector<pair<long long, long long>> path;\n    path.push_back({x1, y1});\n\n    function<void(double)> find_min_dist = [&](double current_dist) {\n        if (path.back().first == x2 && path.back().second == y2) {\n            if (min_dist == -1 || current_dist < min_dist) {\n                min_dist = current_dist;\n            }\n            return;\n        }\n\n        \n        long long current_x = path.back().first;\n        long long current_y = path.back().second;\n\n        \n        long long next_x = current_x;\n        long long next_y = current_y;\n\n        \n        if (abs(current_x - x2) > 0){\n            next_x = current_x + (x2 > current_x ? 1 : -1);\n            \n        } else if (abs(current_y-y2) > 0){\n            next_y = current_y + (y2 > current_y ? 1 : -1);\n        }\n\n        bool fountain_collision = false;\n        for (int i = 0; i < n; ++i) {\n            if ((next_x == fountains[i].first && current_y == fountains[i].second) || (current_x == fountains[i].first && next_y == fountains[i].second))\n             fountain_collision = true;\n        }\n\n\n        if (!fountain_collision){\n            double dist_to_next = 100.0 * (abs(next_x - current_x) + abs(next_y - current_y));\n             path.push_back({next_x, next_y});\n            find_min_dist(current_dist + dist_to_next);\n            path.pop_back();\n        }\n\n    };\n\n    find_min_dist(0);\n\n    cout << fixed << setprecision(20) << min_dist << endl;\n\n    return 0;\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}