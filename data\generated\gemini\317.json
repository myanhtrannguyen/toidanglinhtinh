{
    "solution_id": "gemini-317",
    "problem_id": "p03634",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\n\npublic class Main {\n    static final int INF = Integer.MAX_VALUE;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        List<List<Pair>> adj = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            adj.add(new ArrayList<>());\n        }\n        for (int i = 0; i < n - 1; i++) {\n            int u = sc.nextInt() - 1;\n            int v = sc.nextInt() - 1;\n            int w = sc.nextInt();\n            adj.get(u).add(new Pair(v, w));\n            adj.get(v).add(new Pair(u, w));\n        }\n        int q = sc.nextInt();\n        int k = sc.nextInt() - 1;\n        for (int i = 0; i < q; i++) {\n            int x = sc.nextInt() - 1;\n            int y = sc.nextInt() - 1;\n            long dist = dijkstra(adj, x, k) + dijkstra(adj, k, y);\n            System.out.println(dist);\n        }\n        sc.close();\n    }\n\n    static long dijkstra(List<List<Pair>> adj, int start, int end) {\n        int n = adj.size();\n        long[] dist = new long[n];\n        Arrays.fill(dist, INF);\n        dist[start] = 0;\n        PriorityQueue<Pair> pq = new PriorityQueue<>(Comparator.comparingLong(p -> p.second));\n        pq.offer(new Pair(start, 0));\n        while (!pq.isEmpty()) {\n            Pair curr = pq.poll();\n            int u = curr.first;\n            long d = curr.second;\n            if (d > dist[u]) continue;\n            for (Pair edge : adj.get(u)) {\n                int v = edge.first;\n                long w = edge.second;\n                if (dist[u] + w < dist[v]) {\n                    dist[v] = dist[u] + w;\n                    pq.offer(new Pair(v, dist[v]));\n                }\n            }\n        }\n        return dist[end];\n    }\n\n    static class Pair {\n        int first;\n        long second;\n\n        Pair(int first, long second) {\n            this.first = first;\n            this.second = second;\n        }\n    }\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}