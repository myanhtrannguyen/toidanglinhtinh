{
    "solution_id": "gemini-1418",
    "problem_id": "p03930",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int h = sc.nextInt();\n        int w = sc.nextInt();\n        int[][] board = new int[h][w];\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                board[i][j] = sc.nextInt();\n            }\n        }\n        long maxScore = -1;\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                int[][] tempBoard = new int[h][w];\n                for (int k = 0; k < h; k++) {\n                    System.arraycopy(board[k], 0, tempBoard[k], 0, w);\n                }\n                tempBoard[i][j] = 0;\n                long score = solve(tempBoard);\n                maxScore = Math.max(maxScore, score);\n            }\n        }\n        System.out.println(maxScore);\n    }\n\n    public static long solve(int[][] board) {\n        int h = board.length;\n        int w = board[0].length;\n        long score = 0;\n        long multiplier = 1;\n        while (true) {\n            List<int[]> removed = new ArrayList<>();\n            for (int i = 0; i < h; i++) {\n                int count = 1;\n                for (int j = 1; j < w; j++) {\n                    if (board[i][j] == board[i][j - 1] && board[i][j] != 0) {\n                        count++;\n                    } else {\n                        if (count >= 3) {\n                            for (int k = j - count; k < j; k++) {\n                                removed.add(new int[]{i, k});\n                            }\n                        }\n                        count = 1;\n                    }\n                }\n                if (count >= 3) {\n                    for (int k = w - count; k < w; k++) {\n                        removed.add(new int[]{i, k});\n                    }\n                }\n            }\n            if (removed.isEmpty()) break;\n            long sum = 0;\n            for (int[] pos : removed) {\n                sum += board[pos[0]][pos[1]];\n                board[pos[0]][pos[1]] = 0;\n            }\n            score += multiplier * sum;\n            multiplier *= 2;\n            for (int j = 0; j < w; j++) {\n                int k = h - 1;\n                for (int i = h - 1; i >= 0; i--) {\n                    if (board[i][j] != 0) {\n                        board[k][j] = board[i][j];\n                        if (i != k) board[i][j] = 0;\n                        k--;\n                    }\n                }\n            }\n        }\n        return score;\n    }\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}