{
    "solution_id": "gemini-1129",
    "problem_id": "p03850",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nlong long calculate(long long *arr, char *ops, int n) {\n    long long res = arr[0];\n    for (int i = 0; i < n - 1; i++) {\n        if (ops[i] == '+')\n            res += arr[i + 1];\n        else\n            res -= arr[i + 1];\n    }\n    return res;\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    long long *a = (long long *)malloc(n * sizeof(long long));\n    char *op = (char *)malloc((n - 1) * sizeof(char));\n    for (int i = 0; i < n; i++)\n        scanf(\"%lld\", &a[i]);\n    for (int i = 0; i < n - 1; i++)\n        scanf(\" %c\", &op[i]);\n    long long max_val = -1e18; \n    for (int i = 0; i < (1 << (n - 1)); i++) {\n        long long *cur_a = (long long *)malloc(n * sizeof(long long));\n        char *cur_op = (char *)malloc((n - 1) * sizeof(char));\n        int cur_n = 0;\n        long long cur_val = 0;\n        int k=0;\n        cur_a[0] = a[0];\n        for (int j = 0; j < n - 1; j++) {\n            if ((i >> j) & 1) {\n                cur_val = cur_a[cur_n];\n                cur_n++;\n                int l=j;\n                while(l<n-1 && ((i>>l)&1) == 0){\n                    if(op[l] == '+') cur_val += a[l+1];\n                    else cur_val -=a[l+1];\n                    l++;\n                }\n                cur_a[cur_n] = cur_val;\n                j=l;\n            }\n            else{\n                cur_a[cur_n+1] = a[j+1];\n                cur_op[cur_n] = op[j];\n                cur_n++;\n            }\n        }\n        if(cur_n > 0) max_val =  (max_val > calculate(cur_a, cur_op, cur_n+1))? max_val : calculate(cur_a, cur_op, cur_n+1);\n        else max_val = (max_val > cur_a[0])? max_val: cur_a[0];\n        free(cur_a);\n        free(cur_op);\n    }\n    printf(\"%lld\\n\", max_val);\n    free(a);\n    free(op);\n    return 0;\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}