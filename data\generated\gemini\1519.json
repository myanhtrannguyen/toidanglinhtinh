{
    "solution_id": "gemini-1519",
    "problem_id": "p03956",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        Set<Pair> blackCells = new HashSet<>();\n        for (int i = 0; i < m; i++) {\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            blackCells.add(new Pair(a, b));\n        }\n        boolean changed = true;\n        while (changed) {\n            changed = false;\n            Set<Pair> newBlackCells = new HashSet<>(blackCells);\n            for (Pair p1 : blackCells) {\n                for (Pair p2 : blackCells) {\n                    if (p1.second == p2.first && !blackCells.contains(new Pair(p2.second, p1.first))) {\n                        newBlackCells.add(new Pair(p2.second, p1.first));\n                        changed = true;\n                    }\n                }\n            }\n            blackCells = newBlackCells;\n        }\n        System.out.println(blackCells.size());\n    }\n    static class Pair {\n        int first;\n        int second;\n        Pair(int first, int second) {\n            this.first = first;\n            this.second = second;\n        }\n        @Override\n        public boolean equals(Object obj) {\n            if (this == obj) return true;\n            if (obj == null || getClass() != obj.getClass()) return false;\n            Pair pair = (Pair) obj;\n            return first == pair.first && second == pair.second;\n        }\n        @Override\n        public int hashCode() {\n            return Objects.hash(first, second);\n        }\n    }\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}