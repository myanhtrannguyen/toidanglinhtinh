{
    "solution_id": "gemini-109",
    "problem_id": "p03579",
    "language": "Python",
    "solution": "```python\nimport collections\n\ndef solve():\n    n, m = map(int, input().split())\n    edges = []\n    graph = collections.defaultdict(list)\n    for _ in range(m):\n        u, v = map(int, input().split())\n        edges.append((u, v))\n        graph[u].append(v)\n        graph[v].append(u)\n\n    added_edges = set()\n    count = 0\n    \n    q = collections.deque()\n    for i in range(1,n+1):\n        q.append(i)\n\n    while q:\n        u = q.popleft()\n        \n        dist3 = set()\n        q2 = collections.deque([(u,0)])\n        visited = {u}\n\n        while q2:\n            curr,d = q2.popleft()\n            if d==3:\n                dist3.add(curr)\n                continue\n            for neighbor in graph[curr]:\n                if neighbor not in visited:\n                    visited.add(neighbor)\n                    q2.append((neighbor,d+1))\n        \n        for v in dist3:\n            if (u,v) not in added_edges and (v,u) not in added_edges:\n                added_edges.add((u,v))\n                count+=1\n                \n                \n    print(count)\n\n\nsolve()\n```\n",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}