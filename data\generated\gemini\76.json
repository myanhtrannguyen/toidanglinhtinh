{
    "solution_id": "gemini-76",
    "problem_id": "p03571",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n\n#define MOD 1000000007\n\nint gcd(int a, int b) {\n    if (b == 0)\n        return a;\n    return gcd(b, a % b);\n}\n\nlong long power(long long base, long long exp) {\n    long long res = 1;\n    base %= MOD;\n    while (exp > 0) {\n        if (exp % 2 == 1)\n            res = (res * base) % MOD;\n        base = (base * base) % MOD;\n        exp /= 2;\n    }\n    return res;\n}\n\nint main() {\n    long long A, B, C, D;\n    scanf(\"%lld %lld %lld %lld\", &A, &B, &C, &D);\n\n    long long count = 0;\n    for (long long x = 0; x < A; x++) {\n        for (long long y = 0; y < B; y++) {\n            for (long long z = 0; z < C; z++) {\n                long long minDist = -1;\n                for (long long x1 = 0; x1 < A; x1++) {\n                    for (long long y1 = 0; y1 < B; y1++) {\n                        for (long long z1 = 0; z1 < C; z1++) {\n                            if (gcd(A, gcd(B,C)) != 1) continue;\n                            if (x1*B*C + y1*A*C + z1*A*B < (A*B*C)) {\n                                long long dist = (long long)0;\n                                dist = (long long)0;\n                                dist = (long long) 0;\n\n                                dist = (long long) (x1 *B*C + y1 * A*C + z1* A*B) ;\n\n                                long long curDist = (long long)0;\n                                curDist = (long long)0;\n                                curDist = (long long)0;\n\n                                curDist = (long long) (x1*B*C + y1*A*C + z1 * A *B) ;\n\n                                long long dx = (long long) abs(x - x1);\n                                long long dy = (long long) abs(y - y1);\n                                long long dz = (long long) abs(z - z1);\n\n                                long long maxDist = (long long) 0;\n                                maxDist = (long long)0;\n                                maxDist = (long long)0;\n\n                                maxDist = (long long) (dx > dy ? (dx > dz ? dx : dz) : (dy > dz ? dy : dz));\n                                if (maxDist <= D) {\n                                    count++;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    printf(\"%lld\\n\", count % MOD);\n    return 0;\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}