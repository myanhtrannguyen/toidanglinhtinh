{
    "solution_id": "gemini-1538",
    "problem_id": "p03961",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\nimport java.math.*;\n\npublic class Main {\n    static final long MOD = 1000000007;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] p = new int[n];\n        List<Integer> unknown = new ArrayList<>();\n        Set<Integer> known = new HashSet<>();\n        for (int i = 0; i < n; i++) {\n            p[i] = sc.nextInt();\n            if (p[i] == 0) {\n                unknown.add(i);\n            } else {\n                known.add(p[i]);\n            }\n        }\n\n        int[] unknownArr = new int[unknown.size()];\n        for(int i=0; i<unknown.size(); ++i){\n            unknownArr[i] = i;\n        }\n\n        long ans = 0;\n        List<Integer> nums = new ArrayList<>();\n        for(int i=1; i<=n; ++i){\n            if(!known.contains(i)){\n                nums.add(i);\n            }\n        }\n\n        \n        do{\n            long cur = 1;\n            int[] perm = new int[n];\n            int k=0;\n            for(int i=0; i<n; ++i){\n                if(p[i] == 0){\n                    perm[i] = nums.get(unknownArr[k++]);\n                }else{\n                    perm[i] = p[i];\n                }\n            }\n\n            long fact = 1;\n            for(int i=1; i<=n; ++i) fact = (fact * i) % MOD;\n\n            for(int i=0; i<n; ++i){\n                long count = 0;\n                for(int j=1; j<perm[i]; ++j){\n                    boolean used = false;\n                    for(int l=0; l<=i; ++l){\n                        if(perm[l] == j){\n                            used = true;\n                            break;\n                        }\n                    }\n                    if(!used) count++;\n                }\n                cur = (cur + count * factorial(n-1-i)) % MOD;\n\n            }\n            ans = (ans + cur + 1) % MOD;\n\n        }while(nextPermutation(unknownArr));\n\n        System.out.println(ans);\n        sc.close();\n    }\n\n    static long factorial(int n) {\n        long res = 1;\n        for (int i = 2; i <= n; i++)\n            res = (res * i) % MOD;\n        return res;\n    }\n\n    static boolean nextPermutation(int[] arr) {\n        int i = arr.length - 2;\n        while (i >= 0 && arr[i] >= arr[i + 1]) {\n            i--;\n        }\n        if (i < 0) {\n            return false;\n        }\n        int j = arr.length - 1;\n        while (arr[j] <= arr[i]) {\n            j--;\n        }\n        swap(arr, i, j);\n        reverse(arr, i + 1, arr.length - 1);\n        return true;\n    }\n\n    static void swap(int[] arr, int i, int j) {\n        int temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n    static void reverse(int[] arr, int i, int j) {\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n        }\n    }\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}