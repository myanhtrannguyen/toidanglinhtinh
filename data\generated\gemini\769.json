{
    "solution_id": "gemini-769",
    "problem_id": "p03754",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        List<List<Integer>> graph = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            graph.add(new ArrayList<>());\n        }\n        for (int i = 0; i < n - 1; i++) {\n            int u = sc.nextInt() - 1;\n            int v = sc.nextInt() - 1;\n            graph.get(u).add(v);\n            graph.get(v).add(u);\n        }\n        double[] ans = new double[n];\n        for (int i = 0; i < n; i++) {\n            ans[i] = solve(i, graph);\n        }\n        for (int i = 0; i < n; i++) {\n            System.out.println(ans[i]);\n        }\n    }\n\n    static double solve(int start, List<List<Integer>> graph) {\n        double ans = 0;\n        Queue<Pair> q = new LinkedList<>();\n        q.offer(new Pair(start, new HashSet<>()));\n        while (!q.isEmpty()) {\n            Pair p = q.poll();\n            int u = p.u;\n            Set<Integer> visited = p.visited;\n            ans += 1;\n            List<Integer> neighbors = graph.get(u);\n            int count = 0;\n            for (int v : neighbors) {\n                if (!visited.contains(v)) {\n                    count++;\n                }\n            }\n            if (count == 0) {\n                continue;\n            }\n            for (int v : neighbors) {\n                if (!visited.contains(v)) {\n                    Set<Integer> newVisited = new HashSet<>(visited);\n                    newVisited.add(u);\n                    newVisited.add(v);\n                    q.offer(new Pair(v, newVisited));\n                }\n            }\n        }\n        return ans;\n    }\n\n    static class Pair {\n        int u;\n        Set<Integer> visited;\n\n        Pair(int u, Set<Integer> visited) {\n            this.u = u;\n            this.visited = visited;\n        }\n    }\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}