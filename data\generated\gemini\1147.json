{
    "solution_id": "gemini-1147",
    "problem_id": "p03855",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAXN 200005\n\nint n, k, l;\nint p[100005], q[100005], r[100005], s[100005];\nint parent_road[MAXN], parent_rail[MAXN];\nint size_road[MAXN], size_rail[MAXN];\n\nint find_set_road(int v) {\n    if (v == parent_road[v])\n        return v;\n    return parent_road[v] = find_set_road(parent_road[v]);\n}\n\nint find_set_rail(int v) {\n    if (v == parent_rail[v])\n        return v;\n    return parent_rail[v] = find_set_rail(parent_rail[v]);\n}\n\nvoid union_sets_road(int a, int b) {\n    a = find_set_road(a);\n    b = find_set_road(b);\n    if (a != b) {\n        if (size_road[a] < size_road[b])\n            swap(a, b);\n        parent_road[b] = a;\n        size_road[a] += size_road[b];\n    }\n}\n\nvoid union_sets_rail(int a, int b) {\n    a = find_set_rail(a);\n    b = find_set_rail(b);\n    if (a != b) {\n        if (size_rail[a] < size_rail[b])\n            swap(a, b);\n        parent_rail[b] = a;\n        size_rail[a] += size_rail[b];\n    }\n}\n\nint main() {\n    scanf(\"%d %d %d\", &n, &k, &l);\n    for (int i = 0; i < k; i++) {\n        scanf(\"%d %d\", &p[i], &q[i]);\n    }\n    for (int i = 0; i < l; i++) {\n        scanf(\"%d %d\", &r[i], &s[i]);\n    }\n\n    for (int i = 1; i <= n; i++) {\n        parent_road[i] = i;\n        parent_rail[i] = i;\n        size_road[i] = 1;\n        size_rail[i] = 1;\n    }\n\n    for (int i = 0; i < k; i++) {\n        union_sets_road(p[i], q[i]);\n    }\n    for (int i = 0; i < l; i++) {\n        union_sets_rail(r[i], s[i]);\n    }\n\n    for (int i = 1; i <= n; i++) {\n        int road_root = find_set_road(i);\n        int rail_root = find_set_rail(i);\n        int count = 0;\n        for (int j = 1; j <= n; j++) {\n            if (find_set_road(j) == road_root && find_set_rail(j) == rail_root) {\n                count++;\n            }\n        }\n        printf(\"%d \", count);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n```",
    "model": "gemini-1.5-flash",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."
}